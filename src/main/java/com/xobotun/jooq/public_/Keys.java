/*
 * This file is generated by jOOQ.
 */
package com.xobotun.jooq.public_;


import com.xobotun.jooq.public_.tables.Product;
import com.xobotun.jooq.public_.tables.ProductRecommendation;
import com.xobotun.jooq.public_.tables.records.ProductRecommendationRecord;
import com.xobotun.jooq.public_.tables.records.ProductRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ProductRecord> PRODUCT_PKEY = Internal.createUniqueKey(Product.PRODUCT, DSL.name("product_pkey"), new TableField[] { Product.PRODUCT.ID }, true);
    public static final UniqueKey<ProductRecommendationRecord> PRODUCT_RECOMMENDATION_PKEY = Internal.createUniqueKey(ProductRecommendation.PRODUCT_RECOMMENDATION, DSL.name("product_recommendation_pkey"), new TableField[] { ProductRecommendation.PRODUCT_RECOMMENDATION.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ProductRecommendationRecord, ProductRecord> PRODUCT_RECOMMENDATION__PRODUCT_RECOMMENDATION_PRODUCT_ID1_FKEY = Internal.createForeignKey(ProductRecommendation.PRODUCT_RECOMMENDATION, DSL.name("product_recommendation_product_id1_fkey"), new TableField[] { ProductRecommendation.PRODUCT_RECOMMENDATION.PRODUCT_ID1 }, Keys.PRODUCT_PKEY, new TableField[] { Product.PRODUCT.ID }, true);
    public static final ForeignKey<ProductRecommendationRecord, ProductRecord> PRODUCT_RECOMMENDATION__PRODUCT_RECOMMENDATION_PRODUCT_ID2_FKEY = Internal.createForeignKey(ProductRecommendation.PRODUCT_RECOMMENDATION, DSL.name("product_recommendation_product_id2_fkey"), new TableField[] { ProductRecommendation.PRODUCT_RECOMMENDATION.PRODUCT_ID2 }, Keys.PRODUCT_PKEY, new TableField[] { Product.PRODUCT.ID }, true);
}
